(self.webpackChunkadam_coogan_github_io=self.webpackChunkadam_coogan_github_io||[]).push([[108],{7646:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return p}});var a=t(9756),i=t(7294),r=t(2109);var l=function(e,n,t){var a=e.createShader(n);if(e.shaderSource(a,t),e.compileShader(a),e.getShaderParameter(a,e.COMPILE_STATUS))return a;console.log(e.getShaderInfoLog(a)),e.deleteShader(a)},o=["draw"],u=function(e){var n=e.draw,t=(0,a.Z)(e,o),r=function(e){var n=(0,i.useRef)(null);return(0,i.useEffect)((function(){var t=n.current.getContext("webgl");t||console.log("no webgl!"),e(t)}),[e]),n}(n);return i.createElement("canvas",Object.assign({ref:r},t))},c=function(e){var n=e.label,t=e.value,a=e.set,l=e.min,o=e.max,u=e.description,c=u?i.createElement(i.Fragment,null,i.createElement("label",{style:{flex:2,margin:"0.2rem"},"data-tip":!0,"data-for":u},n),i.createElement(r.Z,{id:u},u)," "):i.createElement("label",{style:{flex:2,margin:"0.2rem"}},n);return i.createElement("div",{style:{display:"flex",alignItems:"center"}},c,i.createElement("input",{style:{flex:1,margin:"0.2rem",minWidth:0},type:"text",min:l,max:o,step:.001,value:t,onChange:function(e){return a(parseFloat(e.target.value))}}),i.createElement("input",{style:{flex:3,margin:"0.2rem"},type:"range",min:l,max:o,step:.001,value:t,onChange:function(e){return a(parseFloat(e.target.value))}}))},s=function(e){var n=e.x,t=e.y,a=e.phiDeg,r=e.q,l=e.index,o=e.r_e,u=e.setX,s=e.setY,_=e.setPhiDeg,f=e.setQ,m=e.setIndex,p=e.setRe;return i.createElement("div",null,i.createElement("h2",null,"Source parameters"),i.createElement(c,{label:"Position (x) ['']",value:n,set:u,min:-2.5,max:2.5}),i.createElement(c,{label:"Position (y) ['']",value:t,set:s,min:-2.5,max:2.5}),i.createElement(c,{label:"Orientation (ϕ) [deg]",value:a,set:_,min:-180,max:180,description:"Orientation of source relative to x-axis"}),i.createElement(c,{label:"Ellipticity (q)",value:r,set:f,min:.15,max:.9999,description:"Controls whether source is circular (q=1) or elliptical (q=0)"}),i.createElement(c,{label:"Index",value:l,set:m,min:.5,max:5,description:"Higher values cause source brightness to decrease sharply with radius"}),i.createElement(c,{label:"Size (r_e) ['']",value:o,set:p,min:1e-4,max:10,description:"Sets the size of the source"}))},_=function(e){var n=e.phiDeg,t=e.q,a=e.r_ein,r=e.setPhiDeg,l=e.setQ,o=e.setRein;return i.createElement("div",null,i.createElement("h2",null,"Lens parameters"),i.createElement(c,{label:"Orientation (ϕ) [deg]",value:n,set:r,min:-180,max:180,description:"Orientation of lens relative to x-axis"}),i.createElement(c,{label:"Ellipticity (q)",value:t,set:l,min:.15,max:.9999,description:"Controls whether lens is circular (q=1) or elliptical (q=0)"}),i.createElement(c,{label:"Einstein radius (r_ein)",value:a,set:o,min:1e-4,max:2.5,description:"Sets the size of the lens"}))},f=function(e){var n=e.sigma_n,t=e.setSigmaN,a=e.setRes;return i.createElement("div",null,i.createElement("h2",null,"Telescope"),i.createElement(c,{label:"Noise level",value:n,set:t,min:0,max:2.5,description:"Telescope noise level"}),i.createElement("div",null,i.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(.012)}},"ELT"),i.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(.031)}},"JWST"),i.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(.05)}},"Hubble Space Telescope"),i.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(.1)}},"Euclid"),i.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(.7)}},"Rubin Observatory")))},m=function(e){var n,t,a,i=function(e,n,t){var a=e.createProgram();if(e.attachShader(a,n),e.attachShader(a,t),e.linkProgram(a),e.getProgramParameter(a,e.LINK_STATUS))return a;console.log(e.getProgramInfoLog(a)),e.deleteProgram(a)}(e,l(e,e.VERTEX_SHADER,"\nattribute vec2 a_position;\n\nuniform float u_range;\nuniform vec2 u_translation;\n\nvarying vec2 v_xy;\n\nvoid main() {\n  gl_PointSize = 1.0;\n  v_xy = a_position * u_range; // image coordinates\n  gl_Position = vec4(a_position, 0, 1);\n}\n"),l(e,e.FRAGMENT_SHADER,"\nprecision mediump float;\n\n// Source parameters\nuniform float u_x_s;\nuniform float u_y_s;\nuniform float u_phi_s;\nuniform float u_q_s;\nuniform float u_index;\nuniform float u_r_e;\nuniform float u_I_e;\n// Main lens parameters\nuniform float u_x_l;\nuniform float u_y_l;\nuniform float u_phi_l;\nuniform float u_q_l;\nuniform float u_r_ein;\n// Flux scale\nuniform float u_min_flux;\nuniform float u_max_flux;\n\n// Image positions\nvarying vec2 v_xy;\n\n// From https://www.shadertoy.com/view/WlfXRN\nvec3 viridis(float t) {\n  const vec3 c0 = vec3(0.2777273272234177, 0.005407344544966578, 0.3340998053353061);\n  const vec3 c1 = vec3(0.1050930431085774, 1.404613529898575, 1.384590162594685);\n  const vec3 c2 = vec3(-0.3308618287255563, 0.214847559468213, 0.09509516302823659);\n  const vec3 c3 = vec3(-4.634230498983486, -5.799100973351585, -19.33244095627987);\n  const vec3 c4 = vec3(6.228269936347081, 14.17993336680509, 56.69055260068105);\n  const vec3 c5 = vec3(4.776384997670288, -13.74514537774601, -65.35303263337234);\n  const vec3 c6 = vec3(-5.435455855934631, 4.645852612178535, 26.3124352495832);\n\n  return c0 + t * (c1 + t * (c2 + t * (c3 + t * (c4 + t * (c5 + t * c6)))));\n}\n\nvec4 fluxToRGBA(float flux) {\n  float unclipped = (flux - u_min_flux) / (u_max_flux - u_min_flux);\n  float clipped = step(0.0, unclipped) * step(0.0, 1.0 - unclipped) * unclipped\n      + step(1.0, unclipped);\n  return vec4(viridis(clipped), 1);\n}\n\nfloat sersic(float x, float y) {\n  // Position relative to source\n  float dx = x - u_x_s;\n  float dy = y - u_y_s;\n\n  float k = 2.0 * u_index - 1.0 / 3.0 + 4.0 / 405.0 / u_index + 46.0 / 25515.0 / (u_index * u_index);\n  float x_maj = dx * cos(u_phi_s) + dy * sin(u_phi_s);\n  float x_min = -dx * sin(u_phi_s) + dy * cos(u_phi_s);\n  float r = sqrt(x_maj * x_maj * u_q_s + x_min * x_min / u_q_s) / u_r_e;\n  float exponent = -k * (pow(r, 1.0 / u_index) - 1.0);\n  return u_I_e * exp(exponent);\n}\n\nvec2 alpha_sie(float x, float y) {\n  // Transform to elliptical coordinates\n  float dx = x - u_x_l;\n  float dy = y - u_y_l;\n  float rx = (dx * cos(u_phi_l) + dy * sin(u_phi_l)) * sqrt(u_q_l);\n  float ry = (-dx * sin(u_phi_l) + dy * cos(u_phi_l)) / sqrt(u_q_l);\n  float ang = atan(ry, rx);\n\n  // Deflection field in lens frame\n  float alpha_lf_scale =\n    2.0 *\n    u_r_ein *\n    sqrt(u_q_l / (1.0 - u_q_l * u_q_l)) *\n    atan(sqrt((1.0 - u_q_l) / (1.0 + u_q_l)));\n  float alpha_x_lf = alpha_lf_scale * cos(ang);\n  float alpha_y_lf = alpha_lf_scale * sin(ang);\n\n  // Deflection field in image frame\n  float alpha_x = alpha_x_lf * cos(u_phi_l) - alpha_y_lf * sin(u_phi_l);\n  float alpha_y = alpha_x_lf * sin(u_phi_l) + alpha_y_lf * cos(u_phi_l);\n\n  return vec2(alpha_x, alpha_y);\n}\n\nvoid main() {\n  vec2 xy_lensed = v_xy - alpha_sie(v_xy[0], v_xy[1]);\n  float flux = sersic(xy_lensed[0], xy_lensed[1]);\n  gl_FragColor = fluxToRGBA(flux);\n}\n"));return n=e.canvas,t=n.clientWidth,a=n.clientHeight,(n.width!==t||n.height!==a)&&(n.width=t,n.height=a),e.viewport(0,0,e.canvas.width,e.canvas.height),e.clearColor(0,0,0,.1),e.clear(e.COLOR_BUFFER_BIT),e.useProgram(i),i},p=function(){var e=(0,i.useState)(.05),n=e[0],t=e[1],a=(0,i.useState)(.1),r=a[0],l=a[1],o=(0,i.useState)(40.107),c=o[0],p=o[1],x=(0,i.useState)(.5),d=x[0],g=x[1],h=(0,i.useState)(4),v=h[0],y=h[1],E=(0,i.useState)(5),b=E[0],S=E[1],R=(0,i.useState)(57.296),q=R[0],L=R[1],A=(0,i.useState)(.75),w=A[0],P=A[1],U=(0,i.useState)(1.5),T=U[0],I=U[1],C=(0,i.useState)(.1),F=C[0],D=C[1],k=(0,i.useState)(0),B=k[0],O=k[1],N=Math.ceil(5/F)*F/2;return i.createElement("div",null,i.createElement(u,{draw:function(e){var t=m(e),a=e.getUniformLocation(t,"u_x_s"),i=e.getUniformLocation(t,"u_y_s"),l=e.getUniformLocation(t,"u_phi_s"),o=e.getUniformLocation(t,"u_q_s"),u=e.getUniformLocation(t,"u_index"),s=e.getUniformLocation(t,"u_r_e"),_=e.getUniformLocation(t,"u_I_e");e.uniform1f(a,n),e.uniform1f(i,r),e.uniform1f(l,c*Math.PI/180),e.uniform1f(o,d),e.uniform1f(u,v),e.uniform1f(s,b),e.uniform1f(_,.05);var f=e.getUniformLocation(t,"u_x_l"),p=e.getUniformLocation(t,"u_y_l"),x=e.getUniformLocation(t,"u_phi_l"),g=e.getUniformLocation(t,"u_q_l"),h=e.getUniformLocation(t,"u_r_ein");e.uniform1f(f,0),e.uniform1f(p,0),e.uniform1f(x,q*Math.PI/180),e.uniform1f(g,w),e.uniform1f(h,T);var y=e.getUniformLocation(t,"u_range");e.uniform1f(y,N);var E=e.getUniformLocation(t,"u_min_flux"),S=e.getUniformLocation(t,"u_max_flux");e.uniform1f(E,-3),e.uniform1f(S,18);var R=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,R);var L=e.getAttribLocation(t,"a_position");e.bindBuffer(e.ARRAY_BUFFER,R),e.vertexAttribPointer(L,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(L),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,1]),e.STATIC_DRAW),e.drawArrays(e.TRIANGLE_STRIP,0,4)},width:500,height:500}),i.createElement(s,{x:n,y:r,phiDeg:c,q:d,index:v,r_e:b,setX:t,setY:l,setPhiDeg:p,setQ:g,setIndex:y,setRe:S}),i.createElement(_,{phiDeg:q,q:w,r_ein:T,setPhiDeg:L,setQ:P,setRein:I}),i.createElement(f,{sigma_n:B,setSigmaN:O,setRes:D}))}}}]);
//# sourceMappingURL=component---src-pages-webgl-tsx-abca5d9628ab8ecaca54.js.map