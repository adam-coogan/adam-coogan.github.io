{"version":3,"sources":["webpack://adam-coogan.github.io/./src/components/lensing/shcontrols.tsx","webpack://adam-coogan.github.io/./src/pages/lensing-1sub.tsx"],"names":["x","y","M_200c","setX","setY","setM200c","label","value","set","min","max","Math","log10","newVal","description","fsLensSource","getFSLensSource","useState","x_s","setXs","EUCLID_RES","y_s","setYs","phi_sDeg","setPhisDeg","q_s","setQs","index","setIndex","r_e","setRe","phi_lDeg","setPhilDeg","q_l","setQl","r_ein","setRein","INIT_LENS_LIGHT_SCALE","lensLightScale","setLensLightScale","gamma_1","setGamma_1","gamma_2","setGamma_2","x_sh","setXsh","y_sh","setYsh","res","setRes","sigma_n","setSigmaN","highFlux","maxFlux","canvasDim","nPix","getNPix","TARGET_RANGE","range","nPixFine","UPSAMPLE","getNoiseTexArray","noiseArray","setNoiseArray","style","backgroundColor","minHeight","justifyContent","display","flexDirection","width","alignItems","padding","paddingRight","data-tip","data-for","id","I_e","lowFlux","phiDeg","q","setPhiDeg","setQ","newNPix","resampleNoise","paddingLeft","x_l","y_l","tau","TAU","noiseRange","lensLight","toggleLensLight"],"mappings":"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","file":"component---src-pages-lensing-1-sub-tsx-cd2a9bc80c23ed906f06.js","sourcesContent":["import React from \"react\";\nimport ParamControls from \"./paramcontrols\";\n\nconst SHControls = ({ x, y, M_200c, setX, setY, setM200c }) => (\n  <div>\n    <h2>Subhalo parameters</h2>\n    <ParamControls\n      label=\"Horizontal position\"\n      value={x}\n      set={setX}\n      min={-2.5}\n      max={2.5}\n    />\n    <ParamControls\n      label=\"Vertical position\"\n      value={y}\n      set={setY}\n      min={-2.5}\n      max={2.5}\n    />\n    <ParamControls\n      label=\"Mass\"\n      value={Math.log10(M_200c)}\n      set={(newVal: number) => setM200c(10 ** newVal)}\n      min={5}\n      max={10.5}\n      description={\n        \"The mass is that of a sphere centered on the subhalo in \" +\n        \"which the average density is 200 times rho_cr\"\n      }\n    />\n  </div>\n);\n\nexport default SHControls;\n","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport Layout from \"../components/layout\";\nimport ImageCanvas from \"../components/lensing/imagecanvas\";\nimport LensControls from \"../components/lensing/lenscontrols\";\nimport SHControls from \"../components/lensing/shcontrols\";\nimport ShearControls from \"../components/lensing/shearcontrols\";\nimport SourceCanvas from \"../components/lensing/sourcecanvas\";\nimport SourceControls from \"../components/lensing/sourcecontrols\";\nimport TelescopeControls from \"../components/lensing/telescopecontrols\";\nimport {\n  EUCLID_RES,\n  INIT_LENS_LIGHT_SCALE,\n  TARGET_RANGE,\n  TAU,\n  UPSAMPLE,\n} from \"../utils/constants\";\nimport { getFSLensSource } from \"../utils/shaders\";\nimport { getNoiseTexArray, getNPix } from \"../utils/utils\";\n\n// Other constants\nconst fsLensSource = getFSLensSource(1);\n\nconst Page = () => {\n  // Source parameters\n  const [x_s, setXs] = useState(0.05);\n  const [y_s, setYs] = useState(EUCLID_RES);\n  const [phi_sDeg, setPhisDeg] = useState(40.107);\n  const [q_s, setQs] = useState(0.5);\n  const [index, setIndex] = useState(4.0);\n  const [r_e, setRe] = useState(5.0);\n  const I_e = 0.05;\n  // Main lens parameters\n  const x_l = 0.0; // const [x_l, setXl] = useState(0.0);\n  const y_l = 0.0; // const [y_l, setYl] = useState(0.0);\n  const [phi_lDeg, setPhilDeg] = useState(57.296);\n  const [q_l, setQl] = useState(0.75);\n  const [r_ein, setRein] = useState(1.5);\n  const [lensLightScale, setLensLightScale] = useState(INIT_LENS_LIGHT_SCALE);\n  // Shear parameters\n  const [gamma_1, setGamma_1] = useState(0.007);\n  const [gamma_2, setGamma_2] = useState(0.01);\n  // Subhalo parameters\n  const [x_sh, setXsh] = useState(-1.1);\n  const [y_sh, setYsh] = useState(-1.1);\n  const [M_200c, setM200c] = useState(1e10);\n  // Telescope parameters\n  const [res, setRes] = useState(0.1);\n  const [sigma_n, setSigmaN] = useState(0.5);\n  // Final flux scale\n  const lowFlux = -3;\n  const highFlux = lensLightScale === 0 ? 23 : INIT_LENS_LIGHT_SCALE;\n  // Intermediate flux scale\n  const maxFlux = highFlux; // TODO: figure out how to reduce flux quantization... :[\n  // Image constants\n  const canvasDim = 400; // final canvas size\n  const nPix = getNPix(canvasDim, TARGET_RANGE, res); // final size in pixels\n  const range = (nPix * res) / 2; // arcsec\n  const nPixFine = UPSAMPLE * nPix; // fine grid pixel size\n  // Noise\n  const noiseRange = 5;\n  const [noiseArray, setNoiseArray] = useState(\n    getNoiseTexArray(nPix ** 2, noiseRange)\n  );\n\n  return (\n    <Layout>\n      <div\n        style={{\n          backgroundColor: \"#FFFFFF\",\n          minHeight: \"94vh\",\n        }}\n      >\n        {/*        <p>\n          This visualization lets you explore how changing the source galaxy,\n          lens galaxy, telescope and subhalo parameters impacts an observation\n          of a strong gravitational lens.\n        </p>*/}\n        <div\n          style={{\n            justifyContent: \"center\",\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          <div\n            style={{\n              width: canvasDim,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"left\",\n              padding: \"0.5rem\",\n              paddingRight: \"5rem\",\n            }}\n          >\n            <div>\n              <h2 data-tip data-for=\"sourceHeaderTT\">\n                Source\n              </h2>\n              <ReactTooltip id=\"sourceHeaderTT\">\n                Source galaxy with no lensing\n              </ReactTooltip>\n              <SourceCanvas\n                x_s={x_s}\n                y_s={y_s}\n                phi_sDeg={phi_sDeg}\n                q_s={q_s}\n                index={index}\n                r_e={r_e}\n                I_e={I_e}\n                lowFlux={lowFlux}\n                highFlux={highFlux}\n                range={range}\n                canvasDim={canvasDim}\n              />\n            </div>\n            <SourceControls\n              x={x_s}\n              y={y_s}\n              phiDeg={phi_sDeg}\n              q={q_s}\n              index={index}\n              r_e={r_e}\n              setX={setXs}\n              setY={setYs}\n              setPhiDeg={setPhisDeg}\n              setQ={setQs}\n              setIndex={setIndex}\n              setRe={setRe}\n            />\n            <TelescopeControls\n              sigma_n={sigma_n}\n              setSigmaN={setSigmaN}\n              setRes={(res: number) => {\n                setRes(res);\n                const newNPix = getNPix(canvasDim, TARGET_RANGE, res);\n                setNoiseArray(getNoiseTexArray(newNPix ** 2, noiseRange));\n              }}\n              resampleNoise={() =>\n                setNoiseArray(getNoiseTexArray(nPix ** 2, noiseRange))\n              }\n            />\n          </div>\n          <div\n            style={{\n              width: canvasDim,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"left\",\n              padding: \"0.5rem\",\n              paddingLeft: \"5rem\",\n            }}\n          >\n            <div>\n              <h2 data-tip data-for=\"obsHeaderTT\">\n                Observation\n              </h2>\n              <ReactTooltip id=\"obsHeaderTT\">\n                Observation of lensed galaxy seen by telescope\n              </ReactTooltip>\n              <ImageCanvas\n                fsLensSource={fsLensSource}\n                // Source parameters\n                x_s={x_s}\n                y_s={y_s}\n                phi_sDeg={phi_sDeg}\n                q_s={q_s}\n                index={index}\n                r_e={r_e}\n                I_e={I_e}\n                // Main lens parameters\n                x_l={x_l}\n                y_l={y_l}\n                phi_lDeg={phi_lDeg}\n                q_l={q_l}\n                r_ein={r_ein}\n                lensLightScale={lensLightScale}\n                // External shear parameters\n                gamma_1={gamma_1}\n                gamma_2={gamma_2}\n                // Subhalo parameters\n                x_sh={[x_sh]}\n                y_sh={[y_sh]}\n                M_200c={[M_200c]}\n                tau={[TAU]}\n                // Misc parameters\n                noiseArray={noiseArray}\n                noiseRange={noiseRange}\n                sigma_n={sigma_n}\n                maxFlux={maxFlux}\n                lowFlux={lowFlux}\n                highFlux={highFlux}\n                res={res}\n                nPix={nPix}\n                nPixFine={nPixFine}\n                range={range}\n                canvasDim={canvasDim}\n              />\n            </div>\n            <SHControls\n              x={x_sh}\n              y={y_sh}\n              M_200c={M_200c}\n              setX={setXsh}\n              setY={setYsh}\n              setM200c={setM200c}\n              // setc200c={setc200c}\n              // setTau={setTau}\n            />\n            <LensControls\n              phiDeg={phi_lDeg}\n              q={q_l}\n              r_ein={r_ein}\n              lensLight={lensLightScale !== 0.0}\n              setPhiDeg={setPhilDeg}\n              setQ={setQl}\n              setRein={setRein}\n              toggleLensLight={() =>\n                lensLightScale === 0.0\n                  ? setLensLightScale(INIT_LENS_LIGHT_SCALE)\n                  : setLensLightScale(0.0)\n              }\n            />\n            <ShearControls\n              gamma_1={gamma_1}\n              gamma_2={gamma_2}\n              setGamma_1={setGamma_1}\n              setGamma_2={setGamma_2}\n            />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Page;\n"],"sourceRoot":""}