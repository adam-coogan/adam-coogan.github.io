(self.webpackChunkadam_coogan_github_io=self.webpackChunkadam_coogan_github_io||[]).push([[108],{3760:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return v}});var a=t(9756),r=t(7294),i=t(2109),o="\nattribute vec2 a_position;\n\nuniform float u_range;\nuniform vec2 u_translation;\n\nvarying vec2 v_xy;\nvarying vec2 v_texcoord;\n\nvoid main() {\n  gl_PointSize = 1.0;\n  v_xy = a_position * u_range; // image coordinates\n  v_texcoord = a_position * 0.5 + 0.5; // texture coordinates\n  gl_Position = vec4(a_position, 0, 1);\n}\n",l=function(e,n,t){var a=e.createShader(n);if(e.shaderSource(a,t),e.compileShader(a),e.getShaderParameter(a,e.COMPILE_STATUS))return a;console.log(e.getShaderInfoLog(a)),e.deleteShader(a)},u=t(1644),_=["draw"],f=function(e){for(var n="\nprecision mediump float;\n\nvarying vec2 v_texcoord;\n\n// Noise-free fluxes\nuniform sampler2D u_flux_tex;\n// Noise array\nuniform sampler2D u_noise_tex;\n// Pixelation info\nuniform float u_n_pix_fine;\nuniform float u_n_pix;\n// Intermediate flux scale\nuniform float u_max_flux;\n// Noise scale\nuniform float u_noise_range;\nuniform float u_sigma_n;\n// Flux scale\nuniform float u_low_flux;\nuniform float u_high_flux;\n\n// From https://www.shadertoy.com/view/WlfXRN\nvec3 viridis(float t) {\n  const vec3 c0 = vec3(0.2777273272234177, 0.005407344544966578, 0.3340998053353061);\n  const vec3 c1 = vec3(0.1050930431085774, 1.404613529898575, 1.384590162594685);\n  const vec3 c2 = vec3(-0.3308618287255563, 0.214847559468213, 0.09509516302823659);\n  const vec3 c3 = vec3(-4.634230498983486, -5.799100973351585, -19.33244095627987);\n  const vec3 c4 = vec3(6.228269936347081, 14.17993336680509, 56.69055260068105);\n  const vec3 c5 = vec3(4.776384997670288, -13.74514537774601, -65.35303263337234);\n  const vec3 c6 = vec3(-5.435455855934631, 4.645852612178535, 26.3124352495832);\n\n  return c0 + t * (c1 + t * (c2 + t * (c3 + t * (c4 + t * (c5 + t * c6)))));\n}\n\nfloat unrescale_flux(float r) {\n  return r * u_max_flux;\n}\n\nfloat unrescale_noise(float n) {\n  return 2.0 * (n - 0.5) * u_noise_range * u_sigma_n * 0.5;\n}\n\nfloat rescale_clip_flux(float flux) {\n  float unclipped = (flux - u_low_flux) / (u_high_flux - u_low_flux);\n  return (\n    step(0.0, unclipped) *\n    step(0.0, 1.0 - unclipped) *\n    unclipped + step(1.0, unclipped)\n  );\n}\n\nvec4 flux_to_noisy_rgba(float flux) {\n  float scaled_noise = texture2D(u_noise_tex, v_texcoord).x;\n  float noisy_flux = unrescale_flux(flux) + unrescale_noise(scaled_noise);\n  return vec4(viridis(rescale_clip_flux(noisy_flux)), 1);\n}\n\nvoid main() {\n  float avg_flux = (\n",t=(e-1)/2,a=-t;a<=t;a++){n+="    //\n";for(var r=-t;r<=t;r++)n+="    texture2D(u_flux_tex, gl_FragCoord.xy / u_n_pix + vec2("+r.toFixed(1)+", "+a.toFixed(1)+") / u_n_pix_fine).x"+(r===t&&a===t?"":" +")+"\n"}return n+="  ) / "+Math.pow(e,2).toFixed(1)+";\n",n+="  gl_FragColor = flux_to_noisy_rgba(avg_flux);",n+="\n}"}(4),c=function(e){var n=e.draw,t=(0,a.Z)(e,_),i=function(e){var n=(0,r.useRef)(null);return(0,r.useEffect)((function(){var t=n.current.getContext("webgl");t||console.log("no webgl!"),e(t)}),[e]),n}(n);return r.createElement("canvas",Object.assign({ref:i},t))},s=function(e){var n=e.label,t=e.value,a=e.set,o=e.min,l=e.max,u=e.description,_=u?r.createElement(r.Fragment,null,r.createElement("label",{style:{flex:2,margin:"0.2rem"},"data-tip":!0,"data-for":u},n),r.createElement(i.Z,{id:u},u)," "):r.createElement("label",{style:{flex:2,margin:"0.2rem"}},n);return r.createElement("div",{style:{display:"flex",alignItems:"center"}},_,r.createElement("input",{style:{flex:1,margin:"0.2rem",minWidth:0},type:"text",min:o,max:l,step:.001,value:t,onChange:function(e){return a(parseFloat(e.target.value))}}),r.createElement("input",{style:{flex:3,margin:"0.2rem"},type:"range",min:o,max:l,step:.001,value:t,onChange:function(e){return a(parseFloat(e.target.value))}}))},m=function(e){var n=e.x,t=e.y,a=e.phiDeg,i=e.q,o=e.index,l=e.r_e,u=e.setX,_=e.setY,f=e.setPhiDeg,c=e.setQ,m=e.setIndex,x=e.setRe;return r.createElement("div",null,r.createElement("h2",null,"Source parameters"),r.createElement(s,{label:"Position (x) ['']",value:n,set:u,min:-2.5,max:2.5}),r.createElement(s,{label:"Position (y) ['']",value:t,set:_,min:-2.5,max:2.5}),r.createElement(s,{label:"Orientation (ϕ) [deg]",value:a,set:f,min:-180,max:180,description:"Orientation of source relative to x-axis"}),r.createElement(s,{label:"Ellipticity (q)",value:i,set:c,min:.15,max:.9999,description:"Controls whether source is circular (q=1) or elliptical (q=0)"}),r.createElement(s,{label:"Index",value:o,set:m,min:.5,max:5,description:"Higher values cause source brightness to decrease sharply with radius"}),r.createElement(s,{label:"Size (r_e) ['']",value:l,set:x,min:1e-4,max:10,description:"Sets the size of the source"}))},x=function(e){var n=e.phiDeg,t=e.q,a=e.r_ein,i=e.setPhiDeg,o=e.setQ,l=e.setRein;return r.createElement("div",null,r.createElement("h2",null,"Lens parameters"),r.createElement(s,{label:"Orientation (ϕ) [deg]",value:n,set:i,min:-180,max:180,description:"Orientation of lens relative to x-axis"}),r.createElement(s,{label:"Ellipticity (q)",value:t,set:o,min:.15,max:.9999,description:"Controls whether lens is circular (q=1) or elliptical (q=0)"}),r.createElement(s,{label:"Einstein radius (r_ein)",value:a,set:l,min:1e-4,max:2.5,description:"Sets the size of the lens"}))},p=function(e){var n=e.sigma_n,t=e.setSigmaN,a=e.setRes,i=e.resampleNoise;return r.createElement("div",null,r.createElement("h2",null,"Telescope"),r.createElement(s,{label:"Noise level",value:n,set:t,min:0,max:3,description:"Telescope noise level"}),r.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return i()}},"Resample noise"),r.createElement("div",null,r.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(.012)}},"ELT"),r.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(.031)}},"JWST"),r.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(.05)}},"Hubble Space Telescope"),r.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(.1)}},"Euclid"),r.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(.7)}},"Rubin Observatory"),r.createElement("button",{style:{margin:"0.1rem"},onClick:function(){return a(1.25)}},"Chunky")))},E=function(e,n,t){var a=function(e,n,t){var a=e.createProgram();if(e.attachShader(a,n),e.attachShader(a,t),e.linkProgram(a),e.getProgramParameter(a,e.LINK_STATUS))return a;console.log(e.getProgramInfoLog(a)),e.deleteProgram(a)}(e,l(e,e.VERTEX_SHADER,n),l(e,e.FRAGMENT_SHADER,t));return e.viewport(0,0,e.canvas.width,e.canvas.height),e.clearColor(0,0,1,.5),e.clear(e.COLOR_BUFFER_BIT),a},d=function(e,n){return Uint8Array.from({length:e},(function(){return Math.floor(256*(Math.max(-n,Math.min(n,(0,u.Bu)()))+n)/(2*n))}))},g=function(e,n,t){return Math.min(e,Math.ceil(2*n/t))},v=function(){var e=(0,r.useState)(.05),n=e[0],t=e[1],a=(0,r.useState)(.1),i=a[0],l=a[1],u=(0,r.useState)(40.107),_=u[0],s=u[1],v=(0,r.useState)(.5),h=v[0],T=v[1],R=(0,r.useState)(4),y=R[0],U=R[1],b=(0,r.useState)(5),A=b[0],S=b[1],L=(0,r.useState)(57.296),D=L[0],P=L[1],F=(0,r.useState)(.75),I=F[0],w=F[1],C=(0,r.useState)(1.5),N=C[0],M=C[1],q=(0,r.useState)(.1),X=q[0],B=q[1],O=(0,r.useState)(.5),k=O[0],G=O[1],W=400,Y=g(W,2.5,X),H=Y*X/2,j=4*Y,z=(0,r.useState)(d(Math.pow(Y,2),5)),Q=z[0],K=z[1];return r.createElement("div",null,r.createElement(c,{draw:function(e){var t=E(e,o,"\nprecision mediump float;\n\n// Source parameters\nuniform float u_x_s;\nuniform float u_y_s;\nuniform float u_phi_s;\nuniform float u_q_s;\nuniform float u_index;\nuniform float u_r_e;\nuniform float u_I_e;\n// Main lens parameters\nuniform float u_x_l;\nuniform float u_y_l;\nuniform float u_phi_l;\nuniform float u_q_l;\nuniform float u_r_ein;\n// Intermediate flux scale\nuniform float u_max_flux;\n\n// Image positions\nvarying vec2 v_xy;\n\n// varying vec2 v_texcoord;\n\nfloat sersic(float x, float y) {\n  // Position relative to source\n  float dx = x - u_x_s;\n  float dy = y - u_y_s;\n\n  float k = 2.0 * u_index - 1.0 / 3.0 + 4.0 / 405.0 / u_index + 46.0 / 25515.0 / (u_index * u_index);\n  float x_maj = dx * cos(u_phi_s) + dy * sin(u_phi_s);\n  float x_min = -dx * sin(u_phi_s) + dy * cos(u_phi_s);\n  float r = sqrt(x_maj * x_maj * u_q_s + x_min * x_min / u_q_s) / u_r_e;\n  float exponent = -k * (pow(r, 1.0 / u_index) - 1.0);\n  return u_I_e * exp(exponent);\n}\n\nvec2 alpha_sie(float x, float y) {\n  // Transform to elliptical coordinates\n  float dx = x - u_x_l;\n  float dy = y - u_y_l;\n  float rx = (dx * cos(u_phi_l) + dy * sin(u_phi_l)) * sqrt(u_q_l);\n  float ry = (-dx * sin(u_phi_l) + dy * cos(u_phi_l)) / sqrt(u_q_l);\n  float ang = atan(ry, rx);\n\n  // Deflection field in lens frame\n  float alpha_lf_scale =\n    2.0 *\n    u_r_ein *\n    sqrt(u_q_l / (1.0 - u_q_l * u_q_l)) *\n    atan(sqrt((1.0 - u_q_l) / (1.0 + u_q_l)));\n  float alpha_x_lf = alpha_lf_scale * cos(ang);\n  float alpha_y_lf = alpha_lf_scale * sin(ang);\n\n  // Deflection field in image frame\n  float alpha_x = alpha_x_lf * cos(u_phi_l) - alpha_y_lf * sin(u_phi_l);\n  float alpha_y = alpha_x_lf * sin(u_phi_l) + alpha_y_lf * cos(u_phi_l);\n\n  return vec2(alpha_x, alpha_y);\n}\n\n// Rescales the flux to (0, 1) and sets to R component of color\nvec4 flux_to_r(float flux) {\n  float unclipped = flux / u_max_flux;\n  float clipped = step(0.0, unclipped) * step(0.0, 1.0 - unclipped) * unclipped\n      + step(1.0, unclipped);\n  return vec4(clipped, 0, 0, 1);\n}\n\nvoid main() {\n  vec2 xy_lensed = v_xy - alpha_sie(v_xy[0], v_xy[1]);\n  float flux = sersic(xy_lensed[0], xy_lensed[1]);\n  gl_FragColor = flux_to_r(flux);\n\n  // // DEBUG: single red pixel\n  // float upsample = 2.0;\n  // vec2 coord = 2.0 * (v_texcoord - 0.5); // texture coordinates\n  // gl_FragColor = vec4(\n  //   step(0.0, coord[0]) *\n  //   step(-0.5 / upsample, -coord[0]) *\n  //   step(0.0, coord[1]) *\n  //   step(-0.5 / upsample, -coord[1]),\n  //   0,\n  //   0,\n  //   1\n  // );\n}\n"),a=E(e,o,f);e.useProgram(t);var r=e.getUniformLocation(t,"u_x_s"),l=e.getUniformLocation(t,"u_y_s"),u=e.getUniformLocation(t,"u_phi_s"),c=e.getUniformLocation(t,"u_q_s"),s=e.getUniformLocation(t,"u_index"),m=e.getUniformLocation(t,"u_r_e"),x=e.getUniformLocation(t,"u_I_e");e.uniform1f(r,n),e.uniform1f(l,i),e.uniform1f(u,_*Math.PI/180),e.uniform1f(c,h),e.uniform1f(s,y),e.uniform1f(m,A),e.uniform1f(x,.05);var p=e.getUniformLocation(t,"u_x_l"),d=e.getUniformLocation(t,"u_y_l"),g=e.getUniformLocation(t,"u_phi_l"),v=e.getUniformLocation(t,"u_q_l"),T=e.getUniformLocation(t,"u_r_ein");e.uniform1f(p,0),e.uniform1f(d,0),e.uniform1f(g,D*Math.PI/180),e.uniform1f(v,I),e.uniform1f(T,N),e.uniform1f(e.getUniformLocation(t,"u_range"),H),e.uniform1f(e.getUniformLocation(t,"u_max_flux"),23);var R=e.createTexture();e.bindTexture(e.TEXTURE_2D,R),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,j,j,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST);var U=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,U),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,R,0),e.viewport(0,0,j,j);var b=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,b);var S=e.getAttribLocation(t,"a_position");e.bindBuffer(e.ARRAY_BUFFER,b),e.vertexAttribPointer(S,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(S),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,1,1,-1]),e.STATIC_DRAW),e.drawArrays(e.TRIANGLES,0,6),e.bindFramebuffer(e.FRAMEBUFFER,null),e.viewport(0,0,Y,Y),e.useProgram(a);var L=e.getUniformLocation(a,"u_n_pix_fine");e.uniform1f(L,j);var P=e.getUniformLocation(a,"u_n_pix");e.uniform1f(P,Y),e.uniform1f(e.getUniformLocation(a,"u_noise_range"),5),e.uniform1f(e.getUniformLocation(a,"u_sigma_n"),k),e.uniform1f(e.getUniformLocation(a,"u_max_flux"),23),e.uniform1f(e.getUniformLocation(a,"u_low_flux"),-3),e.uniform1f(e.getUniformLocation(a,"u_high_flux"),18),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,R),e.uniform1i(e.getUniformLocation(a,"u_flux_tex"),0);var F=e.createTexture();e.activeTexture(e.TEXTURE0+1),e.bindTexture(e.TEXTURE_2D,F),e.pixelStorei(e.UNPACK_ALIGNMENT,1),e.texImage2D(e.TEXTURE_2D,0,e.LUMINANCE,Y,Y,0,e.LUMINANCE,e.UNSIGNED_BYTE,Q),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.uniform1i(e.getUniformLocation(a,"u_noise_tex"),1),e.drawArrays(e.TRIANGLES,0,6)},width:Y,height:Y,style:{width:W,height:W,imageRendering:"pixelated"}}),r.createElement(m,{x:n,y:i,phiDeg:_,q:h,index:y,r_e:A,setX:t,setY:l,setPhiDeg:s,setQ:T,setIndex:U,setRe:S}),r.createElement(x,{phiDeg:D,q:I,r_ein:N,setPhiDeg:P,setQ:w,setRein:M}),r.createElement(p,{sigma_n:k,setSigmaN:G,setRes:function(e){B(e);var n=g(W,2.5,e);K(d(Math.pow(n,2),5))},resampleNoise:function(){return K(d(Math.pow(Y,2),5))}}))}}}]);
//# sourceMappingURL=component---src-pages-webgl-tsx-c67af34ff39adf4acd4e.js.map