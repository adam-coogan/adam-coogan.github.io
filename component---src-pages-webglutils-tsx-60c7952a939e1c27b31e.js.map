{"version":3,"sources":["webpack://adam-coogan.github.io/./src/pages/webglutils.tsx"],"names":["createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","deleteShader","createProgram","vertexShader","fragmentShader","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","resizeCanvasToDisplaySize","canvas","displayWidth","clientWidth","displayHeight","clientHeight","needResize","width","height"],"mappings":"qQAGO,IAAMA,EAAe,SAC1BC,EACAC,EACAC,GAEA,IAAMC,EAASH,EAAGD,aAAaE,GAK/B,GAJAD,EAAGI,aAAaD,EAAQD,GACxBF,EAAGK,cAAcF,GAEDH,EAAGM,mBAAmBH,EAAQH,EAAGO,gBACpC,OAAOJ,EAEpBK,QAAQC,IAAIT,EAAGU,iBAAiBP,IAChCH,EAAGW,aAAaR,IAMLS,EAAgB,SAC3BZ,EACAa,EACAC,GAEA,IAAMC,EAAUf,EAAGY,gBAMnB,GALAZ,EAAGgB,aAAaD,EAASF,GACzBb,EAAGgB,aAAaD,EAASD,GACzBd,EAAGiB,YAAYF,GAECf,EAAGkB,oBAAoBH,EAASf,EAAGmB,aACtC,OAAOJ,EAEpBP,QAAQC,IAAIT,EAAGoB,kBAAkBL,IACjCf,EAAGqB,cAAcN,IAGNO,EAA4B,SAACC,GAExC,IAAMC,EAAeD,EAAOE,YACtBC,EAAgBH,EAAOI,aAGvBC,EACJL,EAAOM,QAAUL,GAAgBD,EAAOO,SAAWJ,EAQrD,OANIE,IAEFL,EAAOM,MAAQL,EACfD,EAAOO,OAASJ,GAGXE","file":"component---src-pages-webglutils-tsx-60c7952a939e1c27b31e.js","sourcesContent":["/*\n * Create shader, add source code and compile, checking for errors.\n */\nexport const createShader = (\n  gl: WebGLRenderingContext,\n  type: number,\n  source: string\n) => {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) return shader;\n\n  console.log(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n};\n\n/*\n * Links shaders into a program.\n */\nexport const createProgram = (\n  gl: WebGLRenderingContext,\n  vertexShader: WebGLShader,\n  fragmentShader: WebGLShader\n) => {\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) return program;\n\n  console.log(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n};\n\nexport const resizeCanvasToDisplaySize = (canvas: HTMLCanvasElement) => {\n  // Lookup the size the browser is displaying the canvas in CSS pixels.\n  const displayWidth = canvas.clientWidth;\n  const displayHeight = canvas.clientHeight;\n\n  // Check if the canvas is not the same size.\n  const needResize =\n    canvas.width !== displayWidth || canvas.height !== displayHeight;\n\n  if (needResize) {\n    // Make the canvas the same size\n    canvas.width = displayWidth;\n    canvas.height = displayHeight;\n  }\n\n  return needResize;\n};\n"],"sourceRoot":""}